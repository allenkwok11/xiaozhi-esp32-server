# Stage 1: build Vue frontend
FROM node:18 as web-builder
WORKDIR /app
COPY main/manager-web/package*.json ./
COPY main/manager-web .
RUN npm install
RUN npm run build

# Stage 2: build Java backend
FROM maven:3.9.4-eclipse-temurin-21 as api-builder
WORKDIR /app
COPY main/manager-api/pom.xml .
COPY main/manager-api/src ./src
RUN mvn clean package -Dmaven.test.skip=true

# Stage 3: build final image
FROM bellsoft/liberica-runtime-container:jre-21-glibc

# Install Nginx and font packages
RUN apk update && \
    apk add --no-cache nginx bash && \
    apk add --no-cache fontconfig ttf-dejavu msttcorefonts-installer && \
    rm -rf /var/cache/apk/*

# Update font cache
RUN printf 'YES\n' | update-ms-fonts && fc-cache -f -v

# Configure Nginx
COPY docs/docker/nginx.conf /etc/nginx/nginx.conf

# Copy frontend build artifacts
COPY --from=web-builder /app/dist /usr/share/nginx/html

# Copy Java backend JAR
COPY --from=api-builder /app/target/xiaozhi-esp32-api.jar /app/xiaozhi-esp32-api.jar

# Expose port
EXPOSE 8002

# Startup script
COPY docs/docker/start.sh /start.sh
RUN chmod +x /start.sh
CMD ["/start.sh"]
