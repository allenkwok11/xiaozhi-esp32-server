# If you only want to install xiaozhi-server in a lightweight way and use only local configuration files,
# you don't need to worry about this file and no changes are required.
# If you want to fetch configuration from manager-api, please read below:
# Copy this file to the xiaozhi-server/data directory. If the data directory does not exist, create it,
# and name the copied file as .config.yaml.
# Note: If there is already a .config.yaml file in the data directory, please delete it first.
# First, start manager-api and manager-web, and register an account. The first registered account will be the administrator.
# Using the administrator account, go to the [Parameter Management] page, find [server.secret], and copy its value.
# Note: Every time you deploy from scratch, server.secret will change.
# Open the .config.yaml file in the data directory and set manager-api.secret to the copied server.secret value.

server:
  ip: 0.0.0.0
  port: 8000
  # Port for the HTTP service, used for visual analysis APIs
  http_port: 8003
  # Visual analysis API address
  # The interface address for visual analysis sent to devices
  # Using the default configuration below, the system will automatically generate the visual recognition address
  # and output it in the startup logs. You can directly visit this address in your browser to confirm it.
  # However, when deploying via Docker or public networks (using SSL or a domain name), this address may not be accurate.
  # Therefore, if deploying with Docker, set vision_explain to the LAN address.
  # If deploying publicly, set vision_explain to the public address.

  vision_explain: http://your ip or domain name:port number/mcp/vision/explain
manager-api:
  # your manager-api address, better to use the LAN address IP
  url: http://127.0.0.1:8002/xiaozhi
  # server.secret your manager-api token, which is the server.secret just copied
  secret: your server.secret value

  
plugins:
  # 获取天气插件的配置，这里填写你的api_key
  # 这个密钥是项目共用的key，用多了可能会被限制
  # 想稳定一点就自行申请替换，每天有1000次免费调用
  # 申请地址：https://console.qweather.com/#/apps/create-key/over
  # 申请后通过这个链接可以找到自己的apihost：https://console.qweather.com/setting?lang=zh
  get_weather: {"api_host":"mj7p3y7naa.re.qweatherapi.com", "api_key": "a861d0d5e7bf4ee1a83d9a9e4f96d4da", "default_location": "广州" }
  # 获取新闻插件的配置，这里根据需要的新闻类型传入对应的url链接，默认支持社会、科技、财经新闻
  # 更多类型的新闻列表查看 https://www.chinanews.com.cn/rss/
  get_news_from_chinanews:
    default_rss_url: "https://www.chinanews.com.cn/rss/society.xml"
    society_rss_url: "https://www.chinanews.com.cn/rss/society.xml"
    world_rss_url: "https://www.chinanews.com.cn/rss/world.xml"
    finance_rss_url: "https://www.chinanews.com.cn/rss/finance.xml"
  get_news_from_newsnow: {"url": "https://newsnow.busiyi.world/api/s?id="}
  home_assistant:
    devices:
      - 客厅,玩具灯,switch.cuco_cn_460494544_cp1_on_p_2_1
      - 卧室,台灯,switch.iot_cn_831898993_socn1_on_p_2_1
    base_url: http://homeassistant.local:8123
    api_key: 你的home assistant api访问令牌
  play_music:
    music_dir: "./music"  # 音乐文件存放路径，将从该目录及子目录下搜索音乐文件
    music_ext: # 音乐文件类型，p3格式效率最高
      - ".mp3"
      - ".wav"
      - ".p3"
    refresh_time: 300 # 刷新音乐列表的时间间隔，单位为秒


  # 意图识别，是用于理解用户意图的模块，例如：播放音乐
Intent:
  # 不使用意图识别
  nointent:
    # 不需要动type
    type: nointent
  intent_llm:
    # 不需要动type
    type: intent_llm
    # 配备意图识别独立的思考模型
    # 如果这里不填，则会默认使用selected_module.LLM的模型作为意图识别的思考模型
    # 如果你的不想使用selected_module.LLM意图识别，这里最好使用独立的LLM作为意图识别，例如使用免费的ChatGLMLLM
    llm: ChatGLMLLM
    # plugins_func/functions下的模块，可以通过配置，选择加载哪个模块，加载后对话支持相应的function调用
    # 系统默认已经记载“handle_exit_intent(退出识别)”、“play_music(音乐播放)”插件，请勿重复加载
    # 下面是加载查天气、角色切换、加载查新闻的插件示例
    functions:
      - get_weather
      - get_news_from_newsnow
      - play_music
  function_call:
    # 不需要动type
    type: function_call
    # plugins_func/functions下的模块，可以通过配置，选择加载哪个模块，加载后对话支持相应的function调用
    # 系统默认已经记载“handle_exit_intent(退出识别)”、“play_music(音乐播放)”插件，请勿重复加载
    # 下面是加载查天气、角色切换、加载查新闻的插件示例
    functions:
      - change_role
      - get_weather
      - get_news_from_chinanews
      - get_news_from_newsnow
      # play_music是服务器自带的音乐播放，hass_play_music是通过home assistant控制的独立外部程序音乐播放
      # 如果用了hass_play_music，就不要开启play_music，两者只留一个
      - play_music
      - santa_speak
      - hass_get_state
      - hass_set_state
      - hass_play_music